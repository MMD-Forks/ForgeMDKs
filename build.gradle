buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below

        // Doesn't work on Gradle 1.x
        if ((GradleVersion.current() >= GradleVersion.version('2.0')) && (JavaVersion.current().isJava8Compatible())) {
            // Doesn't work on Gradle 1.0-1.5
            removeIf { it instanceof MavenArtifactRepository && it.url.host == 'repo1.maven.org' }
            removeIf { it instanceof MavenArtifactRepository && it.url.host == 'files.minecraftforge.net' }
            removeIf { it instanceof MavenArtifactRepository && it.url.host == 'maven.minecraftforge.net' }
        } else {
            all {
                // Doesn't work on Gradle 1.0-1.5
                ArtifactRepository repo ->
                if (repo instanceof MavenArtifactRepository) {
                    if ((repo.url.toString() == 'repo1.maven.org') || (repo.url.toString() == 'files.minecraftforge.net') || (repo.url.toString() == 'maven.minecraftforge.net')) {
                        remove repo
                    }
                }
            }
        }
//      mavenLocal()
//      mavenCentral()
        maven {
            name 'mavenCentral'
            url = 'https://repo1.maven.org/maven2/'
        }
        maven {
            name = 'mmd'
            url = 'https://maven.mcmoddev.com'
        }
        maven {
            name = 'forge'
            url = 'https://maven.minecraftforge.net'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = '1.0'
group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'modid'

// Mojang ships Java 8 to end users, so your mod should target Java 8.
// Need this here so eclipse task generates correctly.
sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

// Print out JVM information so that we know what version is running. Extremely useful for people to know when helping you.
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + ' (' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    version = '1.12.1-14.22.1.2485'
    runDir = 'run'

    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshots are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings = 'stable_39'

    // makeObfSourceJar = false // an SRG-named sources jar is made by default. uncomment this to disable.
}

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    // flatDir {
    //     dir 'libs'
    // }

    // Doesn't work on Gradle 1.x
    if ((GradleVersion.current() >= GradleVersion.version('2.0')) && JavaVersion.current().isJava8Compatible()) {
        // Doesn't work on Gradle 1.0-1.5
        removeIf { it instanceof MavenArtifactRepository && it.url.host == 'repo1.maven.org' }
        removeIf { it instanceof MavenArtifactRepository && it.url.host == 'files.minecraftforge.net' }
        removeIf { it instanceof MavenArtifactRepository && it.url.host == 'maven.minecraftforge.net' }
    } else {
        all {
            // Doesn't work on Gradle 1.0-1.5
            ArtifactRepository repo ->
            if (repo instanceof MavenArtifactRepository) {
                if ((repo.url.toString() == 'repo1.maven.org') || (repo.url.toString() == 'files.minecraftforge.net') || (repo.url.toString() == 'maven.minecraftforge.net')) {
                    remove repo
                }
            }
        }
    }
//  mavenLocal()
//  mavenCentral()
    maven {
        name 'mavenCentral'
        url = 'https://repo1.maven.org/maven2/'
    }
    maven {
        name = 'mmd'
        url = 'https://maven.mcmoddev.com'
    }
    maven {
        name = 'forge'
        url = 'https://maven.minecraftforge.net'
    }
}

dependencies {
    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile 'some.group:artifact:version:classifier'
    // compile 'some.group:artifact:version'

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // The deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    // deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    // deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

eclipse.project {
  buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
  natures 'org.eclipse.buildship.core.gradleprojectnature'
}

idea.module {
  downloadJavadoc = true
  inheritOutputDirs = true
}

if (GradleVersion.current() <= GradleVersion.version('2.3')) {
    task wrapper(type: Wrapper) {
        gradleVersion = '2.14.1'
        if (GradleVersion.current() >= GradleVersion.version('1.0') && GradleVersion.current() <= GradleVersion.version('1.11')) {
            distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-bin.zip"
        }
    }
}
